{"version":3,"sources":["components/ImagePlaceholder/ImagePlaceholder.module.css","components/QuestionMark/QuestionMark.module.css","components/Wrapper/Wrapper.module.css","components/StartButton/StartButton.module.css","components/Counter/Counter.module.css","components/SoundToggle/SoundToggle.module.css","components/Logo/Logo.module.css","assets/logo.png","assets/Pokeball.png","assets/question.png","components/StartButton/StartButton.js","components/Counter/Counter.js","components/SoundToggle/SoundIcon/SoundIcon.js","components/SoundToggle/SoundToggle.js","components/Logo/Logo.js","components/ImagePlaceholder/ImagePlaceholder.js","components/QuestionMark/QuestionMark.js","App.js","features/counter/counterSlice.js","app/store.js","serviceWorker.js","index.js"],"names":["module","exports","StartButton","props","className","styles","Counter","SoundIcon","type","viewBox","d","SoundToggle","Logo","style","src","PokeLogo","alt","ImagePlaceholder","imgPlaceholder","image","pokeball","QuestionMark","wrapper","question","App","Wrapper","counterSlice","createSlice","name","initialState","value","reducers","increment","state","decrement","incrementByAmount","action","payload","actions","configureStore","reducer","counter","counterReducer","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","store","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"sHACAA,EAAOC,QAAU,CAAC,eAAiB,yCAAyC,MAAQ,kC,gBCApFD,EAAOC,QAAU,CAAC,QAAU,8BAA8B,MAAQ,8B,mBCAlED,EAAOC,QAAU,CAAC,QAAU,2B,gBCA5BD,EAAOC,QAAU,CAAC,YAAc,mC,gBCAhCD,EAAOC,QAAU,CAAC,QAAU,2B,gBCA5BD,EAAOC,QAAU,CAAC,YAAc,mC,gBCAhCD,EAAOC,QAAU,CAAC,KAAO,qB,gBCDzBD,EAAOC,QAAU,IAA0B,kC,gBCA3CD,EAAOC,QAAU,IAA0B,sC,gBCA3CD,EAAOC,QAAU,IAA0B,sC,mMCS5BC,EANK,SAACC,GACjB,OACI,4BAAQC,UAAWC,IAAOH,aAA1B,a,iBCIOI,EANC,SAACH,GACb,OACI,yBAAKC,UAAWC,IAAOC,SAAvB,YAAyC,mCAAzC,QCeOC,G,MAhBG,SAACJ,GACf,OACI,oCAEI,2BAAOC,UAAU,UACb,2BAAOI,KAAK,aACZ,yBAAKC,QAAQ,cACT,0BAAMC,EAAE,sHACR,0BAAMA,EAAE,uFACR,0BAAMA,EAAE,wH,iBCDbC,EARK,SAACR,GACjB,OACI,yBAAKC,UAAWC,IAAOM,aAAvB,SACU,kBAAC,EAAD,Q,kCCGHC,EANF,SAACT,GACV,OACI,yBAAKC,UAAWS,IAAMD,KAAME,IAAKC,IAAUC,IAAI,kB,iCCOxCC,EARU,WACrB,OACI,yBAAKb,UAAWC,IAAOa,gBACnB,yBAAKd,UAAWC,IAAOc,MAAOL,IAAKM,IAAUJ,IAAI,gC,iCCI9CK,EARM,WACjB,OACI,yBAAKjB,UAAWC,IAAOiB,SACnB,yBAAKlB,UAAWC,IAAOc,MAAOL,IAAKS,IAAUP,IAAI,gCCoC9CQ,MAbf,WACE,OACE,yBAAKpB,UAAWC,IAAOoB,SACrB,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,Q,OCpCOC,EAAeC,YAAY,CACtCC,KAAM,UACNC,aAAc,CACZC,MAAO,GAETC,SAAU,CACRC,UAAW,SAAAC,GAKTA,EAAMH,OAAS,GAEjBI,UAAW,SAAAD,GACTA,EAAMH,OAAS,GAEjBK,kBAAmB,SAACF,EAAOG,GACzBH,EAAMH,OAASM,EAAOC,Y,EAK+BX,EAAaY,QAiBzDZ,G,EAjBAM,U,EAAWE,U,EAAWC,kBAiBtBT,EAAf,SCtCea,cAAe,CAC5BC,QAAS,CACPC,QAASC,K,QCOOC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCXNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,IAAD,CAAUC,MAAOA,GACf,kBAAC,EAAD,QAGJC,SAASC,eAAe,SDsHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.f3697923.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"imgPlaceholder\":\"ImagePlaceholder_imgPlaceholder__K4_NV\",\"image\":\"ImagePlaceholder_image__2lsPx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"QuestionMark_wrapper__1t_pN\",\"image\":\"QuestionMark_image__1RZIx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Wrapper\":\"Wrapper_Wrapper__A3SV5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"StartButton\":\"StartButton_StartButton__1jypm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Counter\":\"Counter_Counter__2InX4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SoundToggle\":\"SoundToggle_SoundToggle__kcg3Y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Logo\":\"Logo_Logo__1N0xH\"};","module.exports = __webpack_public_path__ + \"static/media/logo.de8a0f82.png\";","module.exports = __webpack_public_path__ + \"static/media/Pokeball.ed23546e.png\";","module.exports = __webpack_public_path__ + \"static/media/question.b23ae5ff.png\";","import React from 'react';\nimport styles from './StartButton.module.css';\n\nconst StartButton = (props) => {\n    return(\n        <button className={styles.StartButton}>Re-start</button>\n    )\n}\n\nexport default StartButton;","import React from 'react';\nimport styles from './Counter.module.css';\n\nconst Counter = (props) => {\n    return(\n        <div className={styles.Counter}>Answered:<span>0</span>/10</div>\n    )\n}\n\nexport default Counter;","import React from 'react';\nimport './SoundIcon.scss';\n\n\nconst SoundIcon = (props) => {\n    return(\n        <>\n            {/* credit: https://codepen.io/aaroniker/pen/zYYKxey */}\n            <label className=\"volume\">\n                <input type=\"checkbox\" />\n                <svg viewBox=\"0 0 108 96\">\n                    <path d=\"M7,28 L35,28 L35,28 L59,8 L59,88 L35,68 L7,68 C4.790861,68 3,66.209139 3,64 L3,32 C3,29.790861 4.790861,28 7,28 Z\"></path>\n                    <path d=\"M79,62 C83,57.3333333 85,52.6666667 85,48 C85,43.3333333 83,38.6666667 79,34 L49,3\"></path>\n                    <path d=\"M95,69 C101.666667,61.6666667 105,54.3333333 105,47 C105,39.6666667 101.666667,32.3333333 95,25 L75.5,6 L49,33\"></path>\n                </svg>\n            </label>\n        </>\n    );\n}\n\nexport default SoundIcon;\n","import React from 'react';\nimport SoundIcon from './SoundIcon/SoundIcon'\nimport styles from './SoundToggle.module.css';\n\nconst SoundToggle = (props) => {\n    return(\n        <div className={styles.SoundToggle}>\n            Sound:<SoundIcon />\n        </div>\n    )\n};\n\nexport default SoundToggle;","import React from 'react';\nimport style from './Logo.module.css';\nimport PokeLogo from '../../assets/logo.png';\n\nconst Logo = (props) => {\n    return(\n        <img className={style.Logo} src={PokeLogo} alt=\"Pokemon logo\"/>\n    );\n}\n\nexport default Logo;","import React from 'react';\nimport styles from './ImagePlaceholder.module.css'\n\nimport pokeball from '../../assets/Pokeball.png';\n\nconst ImagePlaceholder = () => {\n    return (\n        <div className={styles.imgPlaceholder}>\n            <img className={styles.image} src={pokeball} alt=\"image of a random pokemon\"/>\n        </div>\n    )\n}\n\nexport default ImagePlaceholder\n","import React from 'react';\nimport styles from './QuestionMark.module.css';\nimport question from '../../assets/question.png';\n\nconst QuestionMark = () => {\n    return (\n        <div className={styles.wrapper}>\n            <img className={styles.image} src={question} alt=\"image of a random pokemon\" />\n        </div>\n    )\n}\n\nexport default QuestionMark;\n","import React from 'react';\r\nimport './App.css';\r\nimport styles from './components/Wrapper/Wrapper.module.css';\r\n\r\nimport {\r\n  StartButton,\r\n  Counter,\r\n  SoundToggle,\r\n  Logo,\r\n  ImagePlaceholder,\r\n  QuestionMark,\r\n} from './components';\r\n\r\n\r\n// .parent {\r\n//   display: grid;\r\n//   grid - template - columns: repeat(12, 1fr);\r\n//   grid - template - rows: repeat(12, 1fr);\r\n//   grid - column - gap: 0px;\r\n//   grid - row - gap: 0px;\r\n// }\r\n// .div1 { grid-area: 1 / 3 / 2 / 5; } \r\n// .div2 { grid-area: 1 / 6 / 2 / 8; } \r\n// .div3 { grid-area: 1 / 9 / 2 / 11; } \r\n// .div4 { grid-area: 3 / 2 / 10 / 6; } \r\n// .div5 { grid-area: 2 / 6 / 6 / 9; } \r\n// .div6 { grid-area: 6 / 6 / 10 / 9; } \r\n// .div7 { grid-area: 3 / 9 / 10 / 12; } \r\n// .div8 { grid-area: 10 / 4 / 13 / 10; }\r\n\r\nfunction App() {\r\n  return (\r\n    <div className={styles.Wrapper}>\r\n      <StartButton />\r\n      <Counter />\r\n      <SoundToggle />\r\n      <Logo />\r\n      <ImagePlaceholder />\r\n      <QuestionMark />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { createSlice } from '@reduxjs/toolkit';\r\n\r\nexport const counterSlice = createSlice({\r\n  name: 'counter',\r\n  initialState: {\r\n    value: 0,\r\n  },\r\n  reducers: {\r\n    increment: state => {\r\n      // Redux Toolkit allows us to write \"mutating\" logic in reducers. It\r\n      // doesn't actually mutate the state because it uses the Immer library,\r\n      // which detects changes to a \"draft state\" and produces a brand new\r\n      // immutable state based off those changes\r\n      state.value += 1;\r\n    },\r\n    decrement: state => {\r\n      state.value -= 1;\r\n    },\r\n    incrementByAmount: (state, action) => {\r\n      state.value += action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { increment, decrement, incrementByAmount } = counterSlice.actions;\r\n\r\n// The function below is called a thunk and allows us to perform async logic. It\r\n// can be dispatched like a regular action: `dispatch(incrementAsync(10))`. This\r\n// will call the thunk with the `dispatch` function as the first argument. Async\r\n// code can then be executed and other actions can be dispatched\r\nexport const incrementAsync = amount => dispatch => {\r\n  setTimeout(() => {\r\n    dispatch(incrementByAmount(amount));\r\n  }, 1000);\r\n};\r\n\r\n// The function below is called a selector and allows us to select a value from\r\n// the state. Selectors can also be defined inline where they're used instead of\r\n// in the slice file. For example: `useSelector((state) => state.counter.value)`\r\nexport const selectCount = state => state.counter.value;\r\n\r\nexport default counterSlice.reducer;\r\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport counterReducer from '../features/counter/counterSlice';\r\n\r\nexport default configureStore({\r\n  reducer: {\r\n    counter: counterReducer,\r\n  },\r\n});\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport store from './app/store';\r\nimport { Provider } from 'react-redux';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}